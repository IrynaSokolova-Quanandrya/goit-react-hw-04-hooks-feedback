{"version":3,"sources":["components/Section/Section.js","components/Feedback/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","console","log","className","FeedbackOptions","onLeaveFeedback","options","map","vote","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Feedback","useState","setGood","setNeutral","setBad","countTotalFeedback","prev","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAiBeA,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAExB,OADAC,QAAQC,IAAI,CAAEH,QAAOC,aAEnB,oCACE,oBAAIG,UAAU,kBAAd,SAAiCJ,IAChCC,M,MCiBQI,MArBf,YAAwD,IAA7BC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,QAC1C,OACE,mCACGA,EAAQC,KAAI,SAAAC,GAAI,OACf,wBAEEC,KAAK,SACLN,UAAU,gBACVO,QAAS,kBAAML,EAAgBG,IAJjC,SAMGA,GALIA,S,MCMAG,MAZf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qBAAIb,UAAU,mBAAd,UACE,uCAAUS,KACV,2CAAcC,EAAd,OACA,uCAAUC,EAAV,OACA,wCAAWC,KACX,qDAAwBC,S,MCJfC,MAHf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCuDEC,MApDf,WACE,MAAwBC,mBAAS,MAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,MAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,MAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAmBMC,EAAqB,WACzB,OAAOZ,EAAOC,EAAUC,GAQ1B,OACE,qCACI,cAAC,EAAD,CAASf,MAAM,wBAAf,SACA,cAAC,EAAD,CAAiBO,QAAS,CAAC,OAAQ,UAAW,OAASD,gBA7BvC,SAACG,GACrB,OAAQA,GACN,IAAK,OACHa,GAAQ,SAAAI,GAAI,OAAIA,EAAO,KACvBxB,QAAQC,MACR,MACF,IAAK,UACHoB,GAAW,SAAAG,GAAI,OAAIA,EAAO,KAC1B,MACF,IAAK,MACHF,GAAO,SAAAE,GAAI,OAAIA,EAAO,KACtB,MACF,QACE,aAkBA,cAAC,EAAD,CAAS1B,MAAM,eACdyB,IACC,cAAC,EAAD,CACEZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBAjBQ,IAATJ,EACH,IACAc,KAAKC,MAAc,IAAPf,EAAcY,KAAwB,MAkBhD,cAAC,EAAD,CAAcN,QAAQ,0BChDhCU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dfe05b12.chunk.js","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\n\nfunction Section({ title, children }) {\n  console.log({ title, children });\n  return (\n    <section>\n      <h1 className=\"feedback__title\">{title}</h1>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: propTypes.string.isRequired,\n  children: propTypes.any.isRequired,\n};\nexport default Section;\n","import React from \"react\";\nimport \"./FeedbackOptions.css\";\nimport propTypes from \"prop-types\";\n\nfunction FeedbackOptions({ onLeaveFeedback, options }) {\n  return (\n    <>\n      {options.map(vote =>\n        <button\n          key={vote}\n          type=\"button\"\n          className=\"feedback__btn\"\n          onClick={() => onLeaveFeedback(vote)}\n        >\n          {vote}\n        </button>\n      )\n      }\n    </>\n  )\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: propTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import React from \"react\";\nimport \"./Statistics.css\";\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <ul className=\"statistics__list\">\n      <li>Good:{good}</li>\n      <li>Neutral: {neutral} </li>\n      <li>Bad: {bad} </li>\n      <li>Total:{total}</li>\n      <li>Positive feedback: {positivePercentage}</li>\n    </ul>\n  );\n}\n\nexport default Statistics;\n","import React from \"react\";\nimport \"../Notification/Notification.css\";\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\nexport default Notification;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/Feedback/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nfunction Feedback() {\n  const [good, setGood] = useState(null);\n  const [neutral, setNeutral] = useState(null);\n  const [bad, setBad] = useState(null);\n\n  const leaveFeedback = (vote) => {\n    switch (vote) {\n      case 'good':\n        setGood(prev => prev + 1);\n        console.log();\n        break;\n      case 'neutral':\n        setNeutral(prev => prev + 1);\n        break;\n      case 'bad':\n        setBad(prev => prev + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  \n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return good === 0\n      ? \"0\"\n      : Math.round((good * 100) / countTotalFeedback()) + \"%\";\n  };\n\n  return (\n    <>\n        <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={['good', 'neutral', 'bad' ]} onLeaveFeedback={leaveFeedback} />\n        </Section>\n        <Section title=\"Statistics\" />\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n      </>\n  )\n  }\n \nexport default Feedback;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}