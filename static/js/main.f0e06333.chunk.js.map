{"version":3,"sources":["components/Section/Section.js","components/Feedback/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","type","onClick","props","onLeaveFeedback","Component","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Feedback","state","vote","console","log","this","setState","Math","round","countTotalFeedback","leaveFeedback","bind","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAgBeA,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,oBAAIC,UAAU,kBAAd,SAAiCF,IAChCC,MCHDE,G,kKACJ,WAAU,IAAD,OACP,OACE,qCACE,wBACEC,KAAK,SACLF,UAAU,gBACVG,QAAS,kBAAM,EAAKC,MAAMC,gBAAgB,SAH5C,kBAOA,wBACEH,KAAK,SACLF,UAAU,gBACVG,QAAS,kBAAM,EAAKC,MAAMC,gBAAgB,YAH5C,qBAOA,wBACEH,KAAK,SACLF,UAAU,gBACVG,QAAS,kBAAM,EAAKC,MAAMC,gBAAgB,QAH5C,wB,GAlBsBC,cAiCfL,I,MCtBAM,MAZf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qBAAIZ,UAAU,mBAAd,UACE,uCAAUQ,KACV,2CAAcC,EAAd,OACA,uCAAUC,EAAV,OACA,wCAAWC,KACX,qDAAwBC,S,MCJfC,MAHf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCGPC,E,4MACJC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,mDAEP,SAAcO,GACZC,QAAQC,IAAIF,GACZG,KAAKC,UAAS,SAACL,GACb,OAAO,eAAGC,EAAOD,EAAMC,GAAQ,Q,gCAGnC,WACE,OAAOG,KAAKJ,MAAMR,KAAOY,KAAKJ,MAAMP,QAAUW,KAAKJ,MAAMN,M,6CAE3D,WACE,OAA2B,IAApBU,KAAKJ,MAAMR,KACd,IACAc,KAAKC,MAAyB,IAAlBH,KAAKJ,MAAMR,KAAcY,KAAKI,sBAAwB,M,oBAExE,WACE,MAA+BJ,KAAKJ,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASZ,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBO,gBAAiBe,KAAKK,cAAcC,KAAKN,UAE5D,cAAC,EAAD,CAAStB,MAAM,eACdsB,KAAKI,qBACJ,cAAC,EAAD,CACEhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,KAAKI,qBACZZ,mBAAoBQ,KAAKO,oCAG3B,cAAC,EAAD,CAAcb,QAAQ,6B,GAtCTR,aA4CRS,IC9Cfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f0e06333.chunk.js","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h1 className=\"feedback__title\">{title}</h1>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: propTypes.string.isRequired,\n  children: propTypes.any.isRequired,\n};\nexport default Section;\n","import React, { Component } from \"react\";\nimport \"./FeedbackOptions.css\";\nimport propTypes from \"prop-types\";\n\nclass FeedbackOptions extends Component {\n  render() {\n    return (\n      <>\n        <button\n          type=\"button\"\n          className=\"feedback__btn\"\n          onClick={() => this.props.onLeaveFeedback(\"good\")}\n        >\n          Good\n        </button>\n        <button\n          type=\"button\"\n          className=\"feedback__btn\"\n          onClick={() => this.props.onLeaveFeedback(\"neutral\")}\n        >\n          Neutral\n        </button>\n        <button\n          type=\"button\"\n          className=\"feedback__btn\"\n          onClick={() => this.props.onLeaveFeedback(\"bad\")}\n        >\n          Bad\n        </button>\n      </>\n    );\n  }\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: propTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import React from \"react\";\nimport \"./Statistics.css\";\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <ul className=\"statistics__list\">\n      <li>Good:{good}</li>\n      <li>Neutral: {neutral} </li>\n      <li>Bad: {bad} </li>\n      <li>Total:{total}</li>\n      <li>Positive feedback: {positivePercentage}</li>\n    </ul>\n  );\n}\n\nexport default Statistics;\n","import React from \"react\";\nimport \"../Notification/Notification.css\";\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\nexport default Notification;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/Feedback/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  leaveFeedback(vote) {\n    console.log(vote);\n    this.setState((state) => {\n      return { [vote]: state[vote] + 1 };\n    });\n  }\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n  countPositiveFeedbackPercentage() {\n    return this.state.good === 0\n      ? \"0\"\n      : Math.round((this.state.good * 100) / this.countTotalFeedback()) + \"%\";\n  }\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.leaveFeedback.bind(this)} />\n        </Section>\n        <Section title=\"Statistics\" />\n        {this.countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n      </>\n    );\n  }\n}\nexport default Feedback;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}